---
# tasks file for k3s

- name: Ensure "{{ k3s_ulb_dir }}" exists
  ansible.builtin.file:
    path: "{{ k3s_ulb_dir }}"
    state: directory

- name: Pull k3s images
  ansible.builtin.get_url:
    url: "{{ k3s_images }}"
    dest: "{{ k3s_ulb_dir }}/"

- name: Pull k3s binary
  ansible.builtin.get_url:
    url: "{{ k3s_binary }}"
    dest: "{{ k3s_ulb_dir }}/"
    mode: 0755

- name: Ensure /root/k3s exists
  ansible.builtin.file:
    path: "{{ k3s_root_dir }}"
    state: directory

- name: Pull www.k3s.io to install.sh
  ansible.builtin.get_url:
    url: "{{ k3s_install }}"
    dest: "{{ k3s_root_dir }}/{{ k3s_install_file }}"
    mode: 0755

- name: Pull k3s RPM
  ansible.builtin.get_url:
    url: "{{ k3s_rpm }}"
    dest: "{{ k3s_root_dir }}/"

- name: Get RPM filename
  ansible.builtin.find:
    paths: "{{ k3s_root_dir }}"
    patterns: '*.rpm'
  register: k3s_rpm_file

- name: Install k3s from RPM
  ansible.builtin.package:
    name: "{{ item.path }}"
    state: present
    disable_gpg_check: "{{ k3s_disable_yum_gpg_check | default(omit) }}"
  with_items: "{{ k3s_rpm_file.files }}"

- name: Install k3s
  ansible.builtin.shell: "INSTALL_K3S_SKIP_DOWNLOAD=true {{ k3s_root_dir }}/{{ k3s_install_file }}"

- name: Wait for traefik to complete
  ansible.builtin.command: "{{ k3s_ulb_dir }}/kubectl rollout -n default status -n kube-system deployment traefik --timeout=300s"
  register: traefik_result
  until: "traefik_result is not failed"
  retries: 40
  delay: 2
  changed_when: false

- name: Wait for coredns to complete
  ansible.builtin.command: "{{ k3s_ulb_dir }}/kubectl rollout -n default status -n kube-system deployment coredns --timeout=300s"
  register: coredns_result
  until: "coredns_result is not failed"
  retries: 40
  delay: 2
  changed_when: false

- name: Wait for local-path-provisioner to complete
  ansible.builtin.command: "{{ k3s_ulb_dir }}/kubectl rollout -n default status -n kube-system deployment local-path-provisioner --timeout=300s"
  register: local_path_provisioner_result
  until: "local_path_provisioner_result is not failed"
  retries: 40
  delay: 2
  changed_when: false

### Metrics is currently bugged, until I find a fix I am skipping the check.
#- name: Wait for metrics-server to complete
#  ansible.builtin.command: "{{ k3s_ulb_dir }}/kubectl rollout -n default status -n kube-system deployment metrics-server --timeout=300s"
#  register: metrics_server_result
#  until: "metrics_server_result is not failed"
#  retries: 40
#  delay: 2
#  changed_when: false
