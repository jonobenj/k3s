---
# tasks file for k3s

- name: Ensure "{{ k3s_ulb_dir }}" exists
  ansible.builtin.file:
    path: "{{ k3s_ulb_dir }}"
    state: directory

- name: Pull k3s images
  ansible.builtin.get_url:
    url: "{{ k3s_images }}"
    dest: "{{ k3s_ulb_dir }}/"
  async: 500
  poll: 0
  register: images

- name: Pull k3s binary
  ansible.builtin.get_url:
    url: "{{ k3s_binary }}"
    dest: "{{ k3s_ulb_dir }}/"
    mode: 0755
  async: 500
  poll: 0
  register: binary

- name: Ensure /root/k3s exists
  ansible.builtin.file:
    path: "{{ k3s_root_dir }}"
    state: directory

- name: Pull www.k3s.io to install.sh
  ansible.builtin.get_url:
    url: "{{ k3s_install }}"
    dest: "{{ k3s_root_dir }}/{{ k3s_install_file }}"
    mode: 0755
  async: 500
  poll: 0
  register: install

- name: Pull k3s RPM
  ansible.builtin.get_url:
    url: "{{ k3s_rpm }}"
    dest: "{{ k3s_root_dir }}/"
  async: 500
  poll: 0
  register: rpm

- name: Get RPM filename
  ansible.builtin.find:
    paths: "{{ k3s_root_dir }}"
    patterns: "*.rpm"
  register: k3s_rpm_file

- debug: "var=binary"

- name: Wait for async tasks
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  until: job_result.finished
  register: job_result
  retries: 120
  delay: 1
  loop: "{{ images + binary + install + rpm }}"

- name: Install k3s from RPM
  ansible.builtin.package:
    name: "{{ k3s_root_dir }}/{{ k3s_rpm_file.files }}"
    state: present
    disable_gpg_check: "{{ k3s_disable_yum_gpg_check | default(omit) }}"

- name: Install k3s
  ansible.builtin.shell: "INSTALL_K3S_SKIP_DOWNLOAD=true {{ k3s_root_dir }}/{{ k3s_install_file }}"
